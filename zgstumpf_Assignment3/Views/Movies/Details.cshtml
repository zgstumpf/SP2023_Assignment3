@using Tweetinvi;
@using VaderSharp2;
@model zgstumpf_Assignment3.Models.Movie

@{
    ViewData["Title"] = "Details";
}


<h1>Details</h1>

<div>
    <h4>Movie</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            IMDb Link
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ImdbHyperlink)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Genre)
        </dd>
        <dt class = "col-sm-2">
            Release Year
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ReleaseYear)
        </dd>
        <dt class = "col-sm-2">
            Media URL
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.MediaUrl)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to movies</a>
</div>

@{
    var movieTitle = Model.Title;

    // Punctuation such as colons may interfere with Twitter's search API
    var movieTitleNoPunctuation = new string(movieTitle.Where(c => !char.IsPunctuation(c)).ToArray());

    var userClient = new TwitterClient("AAx9UfdCemph0Pg0t8Moq5c6L", "LbhoERpFGjBESYSNjTHuRvE0R80cGxZBx5lJWanM5lFpO2Hs63", "1455230009153503238-WTxQgoYUAQ3D9PTSsUu8stHkmJvuVe", "2ZVnM9tWbCSNAhyJcyC4WPIgiIbUWZ77MTLSx2Qb8TkW3");
    var searchResponse = await userClient.SearchV2.SearchTweetsAsync(movieTitleNoPunctuation);
    var tweets = searchResponse.Tweets;
    var analyzer = new SentimentIntensityAnalyzer();

    double totalSentimentScore = 0;
    int countNonZeroScores = 0;
    foreach (Tweetinvi.Models.V2.TweetV2 tweet in tweets)
    {
        double score = analyzer.PolarityScores(tweet.Text).Compound;

        // Do not include scores of 0, meaning VaderSharp2 couldn't analyze the sentiment, in the calculation
        if (score != 0)
        {
            countNonZeroScores++;
            totalSentimentScore += score;
        }
    }
    double averageSentimentScore = Math.Round((totalSentimentScore / countNonZeroScores), 2);
}

<div class="tweets">
    <h4>Tweets</h4>
    <h5>Overall sentiment analysis: @averageSentimentScore</h5>
    <p>A score greater than 0 means overall sentiment is positive, and a negative score means overall sentiment is negative. Values range from 1 to -1.</p>
    
    <table class="make-data-table">
        <thead>
            <tr>
                <th>Top 100 Tweets</th>
                <th>Sentiment</th>
            </tr>
        </thead>
        <tbdoy>
        @{
            foreach (Tweetinvi.Models.V2.TweetV2 tweet in tweets){
                <tr>
                    <td>@tweet.Text</td>
                    <td>@analyzer.PolarityScores(tweet.Text).Compound</td>
                </tr>
            }
        }
        </tbdoy>
    </table>



</div>